{"version":3,"sources":["context/contact-context.js","components/contact-form.js","components/contact-table.js","views/contact-view.js","App.js","reportWebVitals.js","index.js"],"names":["ContactContext","createContext","initialState","contacts","id","name","email","loading","error","reducer","state","action","type","payload","filter","contact","Error","ContactContextProvider","props","useReducer","dispatch","Provider","value","children","ContactForm","useFormInput","useContext","Segment","basic","Form","onSubmit","_","uniqueId","onReset","Group","widths","Field","width","Input","placeholder","required","Button","fluid","primary","initialValue","useState","setValue","onChange","e","target","ContactTable","selectedId","setSelectedId","rows","map","Table","Row","onClick","active","Cell","celled","striped","selectable","Header","HeaderCell","Body","Footer","fullWidth","colSpan","floated","icon","labelPosition","color","size","disabled","Icon","Contacts","as","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAEaA,EAAiBC,0BAExBC,EAAe,CACjBC,SAAU,CACN,CACIC,GAAI,MACJC,KAAM,QACNC,MAAO,mBAEX,CACIF,GAAI,MACJC,KAAM,UACNC,MAAO,qBAEX,CACIF,GAAI,MACJC,KAAM,OACNC,MAAO,mBAGfC,SAAS,EACTC,MAAO,MAGLC,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,cACD,MAAO,CACHT,SAAS,GAAD,mBAAMO,EAAMP,UAAZ,CAAsBQ,EAAOE,WAE7C,IAAK,cACD,MAAO,CACHV,SAAUO,EAAMP,SAASW,QACrB,SAAAC,GAAO,OAAIA,EAAQX,KAAOO,EAAOE,YAG7C,IAAK,QACD,MAAO,CACHN,SAAS,GAEjB,IAAK,WACD,MAAO,CACHA,SAAS,GAEjB,QACI,MAAM,IAAIS,QAITC,EAAyB,SAAAC,GAClC,MAA0BC,qBAAWV,EAASP,GAA9C,mBAAOQ,EAAP,KAAcU,EAAd,KAEA,OACI,cAACpB,EAAeqB,SAAhB,CAAyBC,MAAS,CAACZ,EAAOU,GAA1C,SACKF,EAAMK,YCnDJ,SAASC,IACpB,IAAMnB,EAAOoB,EAAa,IACpBnB,EAAQmB,EAAa,IAE3B,EAA0BC,qBAAW1B,GAArC,mBAAcoB,GAAd,WAWA,OACI,cAACO,EAAA,EAAD,CAASC,OAAK,EAAd,SACI,cAACC,EAAA,EAAD,CAAMC,SAXG,WACbV,EAAS,CACLR,KAAM,cACNC,QAAS,CAAET,GAAI2B,IAAEC,SAAS,IAAK3B,KAAMA,EAAKiB,MAAOhB,MAAOA,EAAMgB,SAElEjB,EAAK4B,UACL3B,EAAM2B,WAKF,SACI,eAACJ,EAAA,EAAKK,MAAN,CAAYC,OAAO,IAAnB,UACI,cAACN,EAAA,EAAKO,MAAN,CAAYC,MAAO,EAAnB,SACI,cAACC,EAAA,EAAD,yBAAOC,YAAY,cAAiBlC,GAApC,IAA0CmC,UAAQ,OAEtD,cAACX,EAAA,EAAKO,MAAN,CAAYC,MAAO,EAAnB,SACI,cAACC,EAAA,EAAD,yBAAOC,YAAY,eAAkBjC,GAArC,IAA4CM,KAAK,QAAQ4B,UAAQ,OAErE,cAACX,EAAA,EAAKO,MAAN,CAAYC,MAAO,EAAnB,SACI,cAACI,EAAA,EAAD,CAAQC,OAAK,EAACC,SAAO,EAArB,kCAUxB,SAASlB,EAAamB,GAClB,MAA0BC,mBAASD,GAAnC,mBAAOtB,EAAP,KAAcwB,EAAd,KAUA,MAAO,CACHxB,QACAyB,SAViB,SAAAC,GACjBF,EAASE,EAAEC,OAAO3B,QAUlBW,QAPgB,WAChBa,EAAS,M,qBC7CF,SAASI,IACpB,MAA0BxB,qBAAW1B,GAArC,mBAAOU,EAAP,KAAcU,EAAd,KACA,EAAoCyB,qBAApC,mBAAOM,EAAP,KAAmBC,EAAnB,KAcMC,EAAO3C,EAAMP,SAASmD,KAAI,SAAAvC,GAAO,OACnC,eAACwC,EAAA,EAAMC,IAAP,CAEIC,QAAS,kBAAML,EAAcrC,EAAQX,KACrCsD,OAAQ3C,EAAQX,KAAOgD,EAH3B,UAKI,cAACG,EAAA,EAAMI,KAAP,UAAa5C,EAAQX,KACrB,cAACmD,EAAA,EAAMI,KAAP,UAAa5C,EAAQV,OACrB,cAACkD,EAAA,EAAMI,KAAP,UAAa5C,EAAQT,UANhBS,EAAQX,OAUrB,OACI,cAACuB,EAAA,EAAD,UACI,eAAC4B,EAAA,EAAD,CAAOK,QAAM,EAACC,SAAO,EAACC,YAAU,EAAhC,UACI,cAACP,EAAA,EAAMQ,OAAP,UACI,eAACR,EAAA,EAAMC,IAAP,WACI,cAACD,EAAA,EAAMS,WAAP,iBACA,cAACT,EAAA,EAAMS,WAAP,mBACA,cAACT,EAAA,EAAMS,WAAP,yBAGR,cAACT,EAAA,EAAMU,KAAP,UAAaZ,IACb,cAACE,EAAA,EAAMW,OAAP,CAAcC,WAAS,EAAvB,SACI,cAACZ,EAAA,EAAMC,IAAP,UACI,cAACD,EAAA,EAAMS,WAAP,CAAkBI,QAAQ,IAA1B,SACI,eAAC3B,EAAA,EAAD,CACI4B,QAAQ,QACRC,MAAI,EACJC,cAAc,OACdC,MAAM,MACNC,KAAK,QACLC,UAAWvB,EACXM,QAtCP,WANjBrC,EAAS,CACLR,KAAM,cACNC,QAKOsC,IACXC,EAAc,OA6BM,UASI,cAACuB,EAAA,EAAD,CAAMtE,KAAK,UATf,6BCxCb,SAASuE,IACpB,OACI,cAAC,EAAD,UACI,eAACjD,EAAA,EAAD,CAASC,OAAK,EAAd,UACI,cAACmC,EAAA,EAAD,CAAQc,GAAG,KAAX,sBACA,cAACrD,EAAD,IACA,cAAC0B,EAAD,SCRD,SAAS4B,IACtB,OACE,eAACC,EAAA,EAAD,WACE,0DACF,cAAC,EAAD,OCRJ,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.35ebbee8.chunk.js","sourcesContent":["import React, { useReducer, createContext } from \"react\";\n\nexport const ContactContext = createContext();\n\nconst initialState = {\n    contacts: [\n        {\n            id: \"098\",\n            name: \"Diane\",\n            email: \"diane@gmail.com\"\n        },\n        {\n            id: \"099\",\n            name: \"Theresa\",\n            email: \"theresa@gmail.com\"\n        },\n        {\n            id: \"100\",\n            name: \"Toby\",\n            email: \"toby@gmail.com\"\n        }\n    ],\n    loading: false,\n    error: null\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"ADD_CONTACT\":\n            return {\n                contacts: [...state.contacts, action.payload]\n            };\n        case \"DEL_CONTACT\":\n            return {\n                contacts: state.contacts.filter (\n                    contact => contact.id !== action.payload\n                )\n            };\n        case \"START\":\n            return {\n                loading: true\n            };\n        case \"COMPLETE\":\n            return {\n                loading: false\n            };\n        default:\n            throw new Error();\n    }\n};\n\nexport const ContactContextProvider = props => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <ContactContext.Provider value = {[state, dispatch]}>\n            {props.children}\n        </ContactContext.Provider>\n    )\n};","import React, { useState, useContext } from \"react\";\nimport _ from \"lodash\";\nimport { Form, Input, Segment, Button } from \"semantic-ui-react\";\nimport { ContactContext } from \"../context/contact-context\";\n\nexport default function ContactForm() {\n    const name = useFormInput(\"\");\n    const email = useFormInput(\"\");\n// eslint-disable-next-line no-unused-vars\n    const [state, dispatch] = useContext(ContactContext);\n\n    const onSubmit = () => {\n        dispatch({\n            type: \"ADD_CONTACT\",\n            payload: { id: _.uniqueId(10), name: name.value, email: email.value }\n        });\n        name.onReset();\n        email.onReset();\n    };\n\n    return (\n        <Segment basic>\n            <Form onSubmit={onSubmit}>\n                <Form.Group widths=\"3\">\n                    <Form.Field width={6}>\n                        <Input placeholder=\"Enter Name\" {...name} required />\n                    </Form.Field>\n                    <Form.Field width={6}>\n                        <Input placeholder=\"Enter Email\" {...email} type=\"email\" required />\n                    </Form.Field>\n                    <Form.Field width={4}>\n                        <Button fluid primary>\n                            New Contact\n                        </Button>\n                    </Form.Field>\n                </Form.Group>\n            </Form>\n        </Segment>\n    );\n}\n\nfunction useFormInput(initialValue) {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    };\n\n    const handleReset = () => {\n        setValue(\"\");\n      };\n\n    return {\n        value,\n        onChange: handleChange,\n        onReset: handleReset\n    };\n}","import React, { useState, useContext } from \"react\";\nimport { Button, Icon, Segment, Table } from \"semantic-ui-react\";\nimport { ContactContext } from \"../context/contact-context\";\n\nexport default function ContactTable() {\n    const [state, dispatch] = useContext(ContactContext);\n    const [selectedId, setSelectedId] = useState();\n\n    const delContact = id => {\n        dispatch({\n            type: \"DEL_CONTACT\",\n            payload: id\n        });\n    };\n \n    const onRemoveUser = () => {\n        delContact(selectedId);\n        setSelectedId(null);\n    };\n\n    const rows = state.contacts.map(contact => (\n        <Table.Row\n            key={contact.id}\n            onClick={() => setSelectedId(contact.id)}\n            active={contact.id === setSelectedId}\n        >\n            <Table.Cell>{contact.id}</Table.Cell>\n            <Table.Cell>{contact.name}</Table.Cell>\n            <Table.Cell>{contact.email}</Table.Cell>\n        </Table.Row>\n    ));\n\n    return (\n        <Segment>\n            <Table celled striped selectable>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Id</Table.HeaderCell>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Email</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>{rows}</Table.Body>\n                <Table.Footer fullWidth>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan=\"4\">\n                            <Button\n                                floated=\"right\"\n                                icon\n                                labelPosition=\"left\"\n                                color=\"red\"\n                                size=\"small\"\n                                disabled={!selectedId}\n                                onClick={onRemoveUser}\n                            >\n                                <Icon name=\"trash\" /> Remove User\n                            </Button>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>\n        </Segment>\n    );\n}","import React from \"react\";\nimport { Segment, Header } from \"semantic-ui-react\";\nimport ContactForm from \"../components/contact-form\";\nimport ContactTable from \"../components/contact-table\";\nimport { ContactContextProvider } from \"../context/contact-context\";\n\nexport default function Contacts() {\n    return (\n        <ContactContextProvider>\n            <Segment basic>\n                <Header as=\"h3\">Contacts</Header>\n                <ContactForm />\n                <ContactTable />\n            </Segment>\n        </ContactContextProvider>\n    )\n}","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport ContactView from \"./views/contact-view\";\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>React Hooks Context Demo</h1>\n    <ContactView />\n    </Container>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport 'fomantic-ui-css/semantic.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}